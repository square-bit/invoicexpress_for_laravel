<?php

namespace Squarebit\InvoiceXpress\Tests;

use Spatie\LaravelData\LaravelDataServiceProvider;
use Squarebit\InvoiceXpress\InvoiceXpressServiceProvider;

class TestCaseWithDB extends TestCase
{
    protected array $store = [];

    protected function setUp(): void
    {
        $this->turnStubsToMigrations();
        parent::setUp();
    }

    protected function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        $this->turnMigrationsToStubs();
    }

    protected function getPackageProviders($app)
    {
        return [
            InvoiceXpressServiceProvider::class,
            LaravelDataServiceProvider::class,
        ];
    }

    public function getEnvironmentSetUp($app)
    {
        //config()->set('database.default', 'mysql');

        //            $migration = include __DIR__.'/../database/migrations/create_ix_items_table.php.stub';
        //            $migration->up();
        //
        //            $migration = include __DIR__.'/../database/migrations/create_ix_taxes_table.php.stub';
        //            $migration->up();
    }

    protected function turnStubsToMigrations(): void
    {
        $migrationsFolder = __DIR__.'/../database/migrations/';
        $migrations = scandir($migrationsFolder);
        foreach ($migrations as $migration) {
            if ($migration === '.' || $migration === '..') {
                continue;
            }

            $newName = str_replace('.php.stub', '.php', $migration);

            rename($migrationsFolder.$migration, $migrationsFolder.$newName);
        }
    }

    protected function turnMigrationsToStubs(): void
    {
        $migrationsFolder = __DIR__.'/../database/migrations/';
        $migrations = scandir($migrationsFolder);
        foreach ($migrations as $migration) {
            if ($migration === '.' || $migration === '..') {
                continue;
            }

            $newName = str_replace('.php', '.php.stub', $migration);

            rename($migrationsFolder.$migration, $migrationsFolder.$newName);
        }
    }
}
